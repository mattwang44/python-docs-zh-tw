# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 16:47+0000\n"
"PO-Revision-Date: 2022-03-04 20:44+0000\n"
"Last-Translator: Wei-Hsiang (Matt) Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/"
"pydoc-matt-test/c-apicodec/zh_Hant/>\n"
"Language: zh_Hant\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.12-dev\n"

#: ../../c-api/codec.rst:4
msgid "Codec registry and support functions"
msgstr "編解碼器註冊表和支援功能"

#: ../../c-api/codec.rst:8
msgid "Register a new codec search function."
msgstr "註冊新的編解碼器搜索函式。"

#: ../../c-api/codec.rst:10
#, fuzzy
msgid ""
"As side effect, this tries to load the :mod:`encodings` package, if not yet "
"done, to make sure that it is always first in the list of search functions."
msgstr "作為副作用，這會嘗試載入 ：mod：'encodings' "
"包（如果尚未完成），以確保它始終位於搜索函數清單中的第一位。"

#: ../../c-api/codec.rst:15
#, fuzzy
msgid ""
"Unregister a codec search function and clear the registry's cache. If the "
"search function is not registered, do nothing. Return 0 on success. Raise an "
"exception and return -1 on error."
msgstr "註銷編解碼器搜索功能並清除註冊表的緩存。如果未註冊搜索功能，則不執行任何操作"
"。成功時返回 0。引發異常並在出錯時返回 -1。"

#: ../../c-api/codec.rst:23
#, fuzzy
msgid ""
"Return ``1`` or ``0`` depending on whether there is a registered codec for "
"the given *encoding*.  This function always succeeds."
msgstr "返回\"1\"或\"0\"，具體取決於給定的*編碼*是否有註冊的編解碼器。 "
"此函數始終成功。"

#: ../../c-api/codec.rst:28
#, fuzzy
msgid "Generic codec based encoding API."
msgstr "基於通用編解碼器的編碼 API。"

#: ../../c-api/codec.rst:30
#, fuzzy
msgid ""
"*object* is passed through the encoder function found for the given "
"*encoding* using the error handling method defined by *errors*.  *errors* "
"may be ``NULL`` to use the default method defined for the codec.  Raises a :"
"exc:`LookupError` if no encoder can be found."
msgstr ""
"*object* 使用 *errors* 定義的錯誤處理方法，通過為給定 *編碼* "
"找到的編碼器函數傳遞。 *errors* 可以是\"NULL\""
"，以使用為編解碼器定義的預設方法。 如果找不到編碼器，則引發 "
"：exc：『LookupError』。"

#: ../../c-api/codec.rst:37
#, fuzzy
msgid "Generic codec based decoding API."
msgstr "基於通用編解碼器的解碼 API。"

#: ../../c-api/codec.rst:39
#, fuzzy
msgid ""
"*object* is passed through the decoder function found for the given "
"*encoding* using the error handling method defined by *errors*.  *errors* "
"may be ``NULL`` to use the default method defined for the codec.  Raises a :"
"exc:`LookupError` if no encoder can be found."
msgstr ""
"*object* 通過為給定 *編碼* 找到的解碼器函數，使用 *errors* "
"定義的錯誤處理方法。 *errors* 可以是\"NULL\""
"，以使用為編解碼器定義的預設方法。 如果找不到編碼器，則引發 "
"：exc：『LookupError』。"

#: ../../c-api/codec.rst:46
#, fuzzy
msgid "Codec lookup API"
msgstr "編解碼器查找介面"

#: ../../c-api/codec.rst:48
#, fuzzy
msgid ""
"In the following functions, the *encoding* string is looked up converted to "
"all lower-case characters, which makes encodings looked up through this "
"mechanism effectively case-insensitive.  If no codec is found, a :exc:"
"`KeyError` is set and ``NULL`` returned."
msgstr ""
"在以下函數中，查找 *encoding* "
"字串將轉換為所有小寫字元，這使得通過此機制查找的編碼實際上不區分大小寫。 "
"如果未找到編解碼器，則設置 ：exc：'KeyError'並返回 ''NULL''。"

#: ../../c-api/codec.rst:55
#, fuzzy
msgid "Get an encoder function for the given *encoding*."
msgstr "獲取給定 *編碼* 的編碼器函數。"

#: ../../c-api/codec.rst:59
#, fuzzy
msgid "Get a decoder function for the given *encoding*."
msgstr "獲取給定 *編碼* 的解碼器函數。"

#: ../../c-api/codec.rst:63
msgid ""
"Get an :class:`~codecs.IncrementalEncoder` object for the given *encoding*."
msgstr "獲取和所給定 *encoding* 相對應的 :class:`~codecs.IncrementalEncoder` 物件。"

#: ../../c-api/codec.rst:67
msgid ""
"Get an :class:`~codecs.IncrementalDecoder` object for the given *encoding*."
msgstr "獲取和所給定 *encoding* 相對應的 :class:`~codecs.IncrementalDecoder` 物件。"

#: ../../c-api/codec.rst:71
#, fuzzy
msgid ""
"Get a :class:`~codecs.StreamReader` factory function for the given "
"*encoding*."
msgstr "獲取 ：class：'~編解碼器。StreamReader的工廠函數用於給定的*編碼*。"

#: ../../c-api/codec.rst:75
#, fuzzy
msgid ""
"Get a :class:`~codecs.StreamWriter` factory function for the given "
"*encoding*."
msgstr "獲取 ：class：'~編解碼器。StreamWriter 的工廠函數用於給定的 *編碼*。"

#: ../../c-api/codec.rst:79
#, fuzzy
msgid "Registry API for Unicode encoding error handlers"
msgstr "用於 Unicode 編碼錯誤處理程式的註冊表 API"

#: ../../c-api/codec.rst:83
#, fuzzy
msgid ""
"Register the error handling callback function *error* under the given "
"*name*. This callback function will be called by a codec when it encounters "
"unencodable characters/undecodable bytes and *name* is specified as the "
"error parameter in the call to the encode/decode function."
msgstr ""
"在給定的 *name* 下註冊錯誤處理回調函數 *error*。當編解碼器遇到不可編碼的字元/"
"不可解碼的位元組時，此回調函數將由編解碼器調用，並且 *name* "
"被指定為對編碼/解碼函數的調用中的錯誤參數。"

#: ../../c-api/codec.rst:88
#, fuzzy
msgid ""
"The callback gets a single argument, an instance of :exc:"
"`UnicodeEncodeError`, :exc:`UnicodeDecodeError` or :exc:"
"`UnicodeTranslateError` that holds information about the problematic "
"sequence of characters or bytes and their offset in the original string "
"(see :ref:`unicodeexceptions` for functions to extract this information).  "
"The callback must either raise the given exception, or return a two-item "
"tuple containing the replacement for the problematic sequence, and an "
"integer giving the offset in the original string at which encoding/decoding "
"should be resumed."
msgstr ""
"回調獲取單個參數，即 ：exc：'UnicodeEncodeError'、：exc："
"'UnicodeDecodeError' 或 ：exc：'UnicodeTranslateError' 的實例，其中包含有關字"
"元或位元組的有問題的序列及其在原始字元串中的偏移量的資訊（有關提取此資訊的函"
"數，請參閱 ：ref：'unicodeexceptions'）。 回調必須引發給定的異常，或者返回一"
"個包含問題序列替換的雙項元組，以及一個整數，該整數在原始字串中給出應恢復編碼/"
"解碼的偏移量。"

#: ../../c-api/codec.rst:98
#, fuzzy
msgid "Return ``0`` on success, ``-1`` on error."
msgstr "成功時返回\"0\"，錯誤時返回\"-1\"。"

#: ../../c-api/codec.rst:102
#, fuzzy
msgid ""
"Lookup the error handling callback function registered under *name*.  As a "
"special case ``NULL`` can be passed, in which case the error handling "
"callback for \"strict\" will be returned."
msgstr ""
"查找在 *name* 下註冊的錯誤處理回調函數。 作為特殊情況，可以傳遞\"NULL\""
"，在這種情況下，將返回\"strict\"的錯誤處理回調。"

#: ../../c-api/codec.rst:108
#, fuzzy
msgid "Raise *exc* as an exception."
msgstr "將 *exc* 作為例外。"

#: ../../c-api/codec.rst:112
#, fuzzy
msgid "Ignore the unicode error, skipping the faulty input."
msgstr "忽略 unicode 錯誤，跳過錯誤的輸入。"

#: ../../c-api/codec.rst:116
#, fuzzy
msgid "Replace the unicode encode error with ``?`` or ``U+FFFD``."
msgstr "將 Unicode 編碼錯誤替換為\" \""

#: ../../c-api/codec.rst:120
#, fuzzy
msgid "Replace the unicode encode error with XML character references."
msgstr "將 Unicode 編碼錯誤替換為 XML 字元引用。"

#: ../../c-api/codec.rst:124
#, fuzzy
msgid ""
"Replace the unicode encode error with backslash escapes (``\\x``, ``\\u`` "
"and ``\\U``)."
msgstr "將 Unicode 編碼錯誤替換為反斜杠轉義（\"\\x\"、\"\\u\"和\"\\U\"）。"

#: ../../c-api/codec.rst:129
#, fuzzy
msgid "Replace the unicode encode error with ``\\N{...}`` escapes."
msgstr "將 Unicode 編碼錯誤替換為\"\\N{...}\"\"逃跑了。"
